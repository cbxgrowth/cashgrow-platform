import React from 'react';
import { Outlet, useNavigate } from 'react-router-dom';
import { UserType } from '@/types/auth';
import { Button } from '@/components/ui/button';
import { useTheme } from '@/components/ui/theme-provider';
import { useSidebar } from '@/components/ui/sidebar';
import { Menu, Moon, Sun, Bell } from 'lucide-react';
import { NotificationBell } from '@/components/notifications/NotificationBell';

interface DashboardLayoutProps {
  userType: UserType;
}

const DashboardLayout: React.FC<DashboardLayoutProps> = ({ userType }) => {
  const navigate = useNavigate();
  const { theme, setTheme } = useTheme();
  const { collapsed, setCollapsed } = useSidebar();

  const toggleTheme = () => {
    setTheme(theme === 'dark' ? 'light' : 'dark');
  };

  return (
    <div className="flex h-screen bg-background">
      {/* Sidebar */}
      <div className={`border-r bg-card ${collapsed ? 'w-16' : 'w-64'} transition-all duration-300 hidden md:block`}>
        {/* Sidebar content */}
      </div>

      {/* Main content */}
      <div className="flex-1 flex flex-col overflow-hidden">
        {/* Header */}
        <header className="h-14 border-b flex items-center px-4 gap-4">
          <Button variant="ghost" size="icon" onClick={() => setCollapsed(!collapsed)} className="md:flex hidden">
            <Menu className="h-5 w-5" />
          </Button>
          
          <div className="ml-auto flex items-center gap-2">
            <NotificationBell />
            <Button variant="ghost" size="icon" onClick={toggleTheme}>
              {theme === 'dark' ? <Sun className="h-5 w-5" /> : <Moon className="h-5 w-5" />}
            </Button>
            {/* User profile dropdown */}
          </div>
        </header>

        {/* Content area */}
        <main className="flex-1 overflow-auto p-4">
          <Outlet />
        </main>
      </div>
    </div>
  );
};

export default DashboardLayout;
